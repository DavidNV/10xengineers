{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { landing, questions } from \"./texts.js\";\n  export let name;\n  let count = 0;\n  let total = 0;\n  let started = false;\n  let finished = false;\n  let robot = false;\n  let result = \"\";\n  let share = \"\";\n\n  function handleStart() {\n    started = true;\n  }\n\n  function showResult(total) {\n    const MAX = 45;\n    let lvl = 9;\n\n    if (total === MAX) lvl = 10;\n    else {\n      const STEP = 3;\n      let reduc = MAX - STEP;\n      for (let i = 9; i > 0; i--)\n        if (total >= reduc) {\n          lvl = i;\n          break;\n        } else reduc -= STEP;\n    }\n    switch (lvl) {\n      case 10: {\n        result = `You are a ${lvl}x Engineer! Apple must hire you!`;\n        share = `I'm a ${lvl}x Engineer! I'm preparing my CV! Do the test here ->`;\n      }\n      case 0: {\n        result =\n          \"I'm not sure you are an engineer, you have to effort... trust me\";\n        share =\n          \"I think my professional life needs some change. Maybe I am not an engineer. Do the test here ->\";\n      }\n      default: {\n        result = `You are a ${lvl}x Engineer! That is not enough.`;\n        share = `I'm a ${lvl}x Engineer! What a shame. Do the test here ->`;\n      }\n    }\n\n    finished = true;\n  }\n\n  function handleSubmit() {\n    robot = false;\n    count += 1;\n    if (count === questions.length) showResult(total);\n  }\n\n  function handleClick(e) {\n    e.target.blur();\n    total += parseInt(e.target.dataset.value);\n    if (e.target.dataset.validate === \"true\") robot = true;\n    else count += 1;\n    if (count === questions.length) showResult(total);\n  }\n</script>\n\n<style>\n  .spacing {\n    margin: 2em 0;\n  }\n  .btn-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 500px;\n  }\n  button {\n    cursor: pointer;\n  }\n  i {\n    text-align: center;\n  }\n</style>\n\n<main>\n  {#if started === false}\n  <p>\n    <q cite=\"https://twitter.com/skirani/status/1149302828420067328\">\n      If you have a 10x engineer as part of your first few engineers, you\n      increase the odds of your startup success significantly.\n    </q>\n    <br />\n    Shekhar Kirani\n  </p>\n  <h1>{landing.title}</h1>\n  <div class=\"btn-container spacing\">\n    <button on:click=\"{handleStart}\">{landing.button}</button>\n  </div>\n  {:else if finished === false && robot === false}\n  <h2>{questions[count].q}</h2>\n  <div class=\"btn-container spacing\">\n    {#each questions[count].r as option, i}\n    <button\n      on:click=\"{handleClick}\"\n      data-value=\"{option.value}\"\n      data-validate=\"{option.robot}\"\n    >\n      {option.text}\n    </button>\n    {/each}\n  </div>\n  {:else if finished === false && robot === true}\n  <h2>We just want to make sure</h2>\n  <form action=\"\" method=\"POST\" on:submit|preventDefault=\"{handleSubmit}\">\n    <div id=\"recaptcha\"></div>\n    <br />\n    <input type=\"submit\" value=\"Submit\" />\n  </form>\n  <script\n    src=\"https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit\"\n    defer\n  ></script>\n  {:else if finished === true}\n  <h1>{result}</h1>\n  <a\n    class=\"twitter-share-button\"\n    href=\"https://twitter.com/intent/tweet\"\n    data-size=\"large\"\n    data-text=\"{share}\"\n    data-url=\"https://10xengineers.netlify.com/\"\n    data-hashtags=\"10xEngineer\"\n    data-related=\"skirani, cajotafer, cvander, dhh, addyosmani\"\n  >\n    Tweet\n  </a>\n  <i class=\"spacing\">\n    The origin of the 10xEngineer Test is\n    <a href=\"https://twitter.com/skirani/status/1149302828420067328\"\n      >this thread of Shekhar Kirani</a\n    >\n    that was highly rejected by the community. If you don't know about this,\n    just take a look.\n  </i>\n  <script>\n    window.twttr = (function(d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    })(document, \"script\", \"twitter-wjs\");\n  </script>\n  {/if}\n</main>\n<address class=\"spacing\">\n  Created by <a href=\"https://cajotafer.com\">Cajotafer</a> |\n  <a href=\"https://twitter.com/cajotafer\">Twitter</a> |\n  <a href=\"https://github.com/cajotafer\">Github</a>\n</address>\n"
  ],
  "names": [],
  "mappings": "AAiEE,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,CAAC,CAAC,AACf,CAAC,AACD,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,CAAC,cAAC,CAAC,AACD,UAAU,CAAE,MAAM,AACpB,CAAC"
}